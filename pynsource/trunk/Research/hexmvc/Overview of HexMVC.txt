Overview of HexMVC
------------------

I have a talk entitled "HexMVC" brewing which is a simplified blend of the Hexagonal architecture, PureMVC and dependency injection.  Not sure I can have it ready for February but am keen to present it to the group soon.

I have an implementation of HexMVC in Python which proves the ideas work (so far!), allowing developers to "program to interfaces/abstractions" and plug and play different implementations within an MVC architecture.  The ideas aren't new but what HexMVC aims at is a useful blend of patterns and idioms - resulting in a simple architectural pattern that anybody can build a complex app with.  And there is no 'framework' code needed to get started, you just start coding with any language, with the pattern "in your head".

Here is my bootstrap code of my demo app:

# HEXMVC BOOT WIRING v3 - model is separate

from hexapp import App
from hexserver import Server1
from hexmvcgui import MyWxApp
import wx

# Create Gui
wxapp = MyWxApp(redirect=False)
gui = wxapp.myframe  # arguably too wx based to be a true adapter, but as long
                     # as we call nothing wx specific, it acts as an adapter ok.
# Create Server
server = Server1(host='localhost', port=8081)

# Create Persistence
# Create Model - SIMPLE
from hexmodel_simple import Model
from hexpersistence import PersistenceMock2
persistence = PersistenceMock2()
model = Model(persistence)
    
# Create Core Hexagon App and inject adapters
app = App(model, server, gui)
wx.CallAfter(app.Boot)

# Start Gui
wxapp.MainLoop()

